{"ast":null,"code":"var _jsxFileName = \"/home/manan/Desktop/vocab-mern-stack-master/client/src/components/AddWordModal.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withSnackbar } from 'notistack';\nimport { handleAddWord } from '../actions/word';\n\nclass AddWordModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      isDuplicate: false,\n      loading: false\n    };\n  }\n\n  setInput(input) {\n    this.setState({\n      input\n    });\n    const isDuplicate = this.props.words.some(word => word.word === input);\n    if (isDuplicate) this.setState({\n      isDuplicate\n    });else this.setState({\n      isDuplicate\n    });\n  }\n\n  handleAddBtn(e) {\n    if (this.state.input !== '') {\n      this.setState({\n        loading: true\n      });\n      this.props.handleAddWord(this.state.input).then(res => {\n        if (!res.word) this.props.enqueueSnackbar(\"Unable to add new word\");else this.props.enqueueSnackbar(\"New word is added to dictionary\");\n        this.props.handleClose();\n        this.setState({\n          loading: false\n        });\n      }).catch(() => this.props.enqueueSnackbar(\"Unable to add new word\"));\n    }\n  }\n\n  render() {\n    const {\n      open,\n      handleClose\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Add To Dictionary\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"word\",\n      label: \"New Word\",\n      type: \"Text\",\n      onKeyUp: e => this.setInput(e.target.value),\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), this.state.loading ? /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }\n    })) : /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.isDuplicate,\n      onClick: e => this.handleAddBtn(e),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }, \"Add\")));\n  }\n\n}\n\nconst mapStateToProps = words => {\n  return {\n    words\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleAddWord\n})(withSnackbar(AddWordModal));","map":{"version":3,"sources":["/home/manan/Desktop/vocab-mern-stack-master/client/src/components/AddWordModal.js"],"names":["React","Component","connect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","CircularProgress","withSnackbar","handleAddWord","AddWordModal","state","input","isDuplicate","loading","setInput","setState","props","words","some","word","handleAddBtn","e","then","res","enqueueSnackbar","handleClose","catch","render","open","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withSnackbar } from 'notistack'\nimport { handleAddWord } from '../actions/word'\n\nclass AddWordModal extends Component {\n    state = {\n        input: '',\n        isDuplicate: false,\n        loading: false\n    }\n\n    setInput(input) {\n        this.setState({ input })\n        const isDuplicate = this.props.words.some(word => word.word === input)\n        if (isDuplicate) this.setState({ isDuplicate })\n        else this.setState({ isDuplicate })\n    }\n\n    handleAddBtn(e) {\n        if (this.state.input !== '') {\n            this.setState({ loading: true })\n            this.props.handleAddWord(this.state.input)\n                .then(res => {\n                    if (!res.word) this.props.enqueueSnackbar(\"Unable to add new word\")\n                    else this.props.enqueueSnackbar(\"New word is added to dictionary\")\n                    this.props.handleClose()\n                    this.setState({ loading: false })\n                })\n                .catch(() => this.props.enqueueSnackbar(\"Unable to add new word\"))\n        }\n    }\n\n    render() {\n        const { open, handleClose } = this.props\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add To Dictionary</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"word\"\n                        label=\"New Word\"\n                        type=\"Text\"\n                        onKeyUp={e => this.setInput(e.target.value)}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    {this.state.loading ?\n                        (<Button><CircularProgress color=\"secondary\" /></Button>) :\n                        (<Button disabled={this.state.isDuplicate} onClick={(e) => this.handleAddBtn(e)} color=\"primary\">\n                            Add\n                        </Button>)}\n                </DialogActions>\n            </Dialog >\n        )\n    }\n}\n\nconst mapStateToProps = (words) => {\n    return {\n        words\n    }\n}\n\nexport default connect(mapStateToProps, { handleAddWord })(withSnackbar(AddWordModal))\n"]},"metadata":{},"sourceType":"module"}