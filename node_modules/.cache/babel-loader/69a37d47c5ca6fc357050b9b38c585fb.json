{"ast":null,"code":"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nconst serverUrl = 'http://localhost:5000/graphql';\nconst client = new ApolloClient({\n  uri: serverUrl,\n  cache: new InMemoryCache()\n});\nexport const getAllWords = async () => {\n  const result = await client.query({\n    query: gql`\n            {\n                words{\n                    word\n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n  });\n  return result.data.words;\n};\nexport const addNewWord = async word => {\n  const result = await client.mutate({\n    mutation: gql`\n            mutation{\n                addWord(word:\"${word}\"){\n                    word\n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n  });\n  if (result.data.addWord.word === null) return false;\n  console.log(result.data.addWord);\n  return result.data.addWord;\n};","map":{"version":3,"sources":["/home/manan/Desktop/vocab-mern-stack-master/client/src/utils/helper.js"],"names":["ApolloClient","InMemoryCache","gql","serverUrl","client","uri","cache","getAllWords","result","query","data","words","addNewWord","word","mutate","mutation","addWord","console","log"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;AAEA,MAAMC,SAAS,GAAG,+BAAlB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAEF,SADuB;AAE5BG,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFqB,CAAjB,CAAf;AAKA,OAAO,MAAMM,WAAW,GAAG,YAAY;AACnC,QAAMC,MAAM,GAAG,MAAMJ,MAAM,CACtBK,KADgB,CACV;AACHA,IAAAA,KAAK,EAAEP,GAAI;;;;;;;;;;;;AADR,GADU,CAArB;AAeA,SAAOM,MAAM,CAACE,IAAP,CAAYC,KAAnB;AACH,CAjBM;AAmBP,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAML,MAAM,GAAG,MAAMJ,MAAM,CACtBU,MADgB,CACT;AACJC,IAAAA,QAAQ,EAAEb,GAAI;;gCAEMW,IAAK;;;;;;;;;;AAHrB,GADS,CAArB;AAeA,MAAIL,MAAM,CAACE,IAAP,CAAYM,OAAZ,CAAoBH,IAApB,KAA6B,IAAjC,EAAuC,OAAO,KAAP;AACvCI,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACE,IAAP,CAAYM,OAAxB;AACA,SAAOR,MAAM,CAACE,IAAP,CAAYM,OAAnB;AACH,CAnBM","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client'\n\nconst serverUrl = 'http://localhost:5000/graphql'\n\nconst client = new ApolloClient({\n    uri: serverUrl,\n    cache: new InMemoryCache()\n})\n\nexport const getAllWords = async () => {\n    const result = await client\n        .query({\n            query: gql`\n            {\n                words{\n                    word\n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n        })\n    return result.data.words\n}\n\nexport const addNewWord = async (word) => {\n    const result = await client\n        .mutate({\n            mutation: gql`\n            mutation{\n                addWord(word:\"${word}\"){\n                    word\n                    entries{\n                        partOfSpeech\n                        origin\n                        definitions\n                        examples\n                    }\n                }\n            }`\n        })\n    if (result.data.addWord.word === null) return false\n    console.log(result.data.addWord);\n    return result.data.addWord\n}"]},"metadata":{},"sourceType":"module"}